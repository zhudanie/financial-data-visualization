tabPanel("Scatterplot", plotOutput("scatterplot")), # Plot
tabPanel("Distribution", # Plots of distributions
fluidRow(
column(6, plotOutput("distribution1")),
column(6, plotOutput("distribution2")))
), # Distributions
tabPanel("Industry Visualizations", plotOutput("facetedplot")), # Industry facet
tabPanel("Financial Visualizations",
br(),
br(),
plotOutput("income_financials"),
br(),
br(),
br(),
br(),
plotOutput("esg_profitmargin")), # Financial data plots
tabPanel("3D Heat Map", rglwidgetOutput("threed_plot",  width = 800, height = 600)),
tabPanel("Model Summary", verbatimTextOutput("summary")), # Regression output
tabPanel("Data", DT::dataTableOutput('tbl')), # Data as datatable
id = "tabset"
),
id = "main"
)
))
# SERVER
server <- function(input, output) {
observeEvent(input[["tabset"]], {
if(input[["tabset"]] == "Financial Visualizations" | input[["tabset"]] == "3D Heat Map"){
hideElement(selector = "#sidebar")
removeCssClass("main", "col-sm-8")
addCssClass("main", "col-sm-12")
}else{
showElement(selector = "#sidebar")
removeCssClass("main", "col-sm-12")
addCssClass("main", "col-sm-8")
}})
# Regression output
output$summary <- renderPrint({
fit <- lm(compositeAugust[,input$outcome] ~ compositeAugust[,input$indepvar])
names(fit$coefficients) <- c("Intercept", input$var2)
summary(fit)
})
# Data output
output$tbl = DT::renderDataTable({
DT::datatable(compositeAugust, options = list(lengthChange = FALSE))
})
# Scatterplot output
output$scatterplot <- renderPlot({
plot(compositeAugust[,input$indepvar], compositeAugust[,input$outcome], main="Scatterplot",
xlab=input$indepvar, ylab=input$outcome, pch=19)
abline(lm(compositeAugust[,input$outcome] ~ compositeAugust[,input$indepvar]), col="red")
lines(lowess(compositeAugust[,input$indepvar],compositeAugust[,input$outcome]), col="blue")
}, height=400)
# Industry visualization output
output$facetedplot <- renderPlot({
ggplot(composite_total2, aes(composite_total2[,input$indepvar], composite_total2[,input$outcome])) + geom_hex() + facet_wrap(~ Sector, ncol=4) + labs(y = input$outcome, x = input$indepvar)}, res = 96)
# Financial data output
output$income_financials <- renderPlot({
ggplot(income_statements, aes(x=Income, y=Sector)) +
geom_dotplot(binaxis='y', stackdir='center', stackratio=1.5, dotsize=.04) +
scale_x_continuous(breaks=seq(0,100000000000,10000000000)) +
labs(x="Income (USD)") +
theme_minimal() +
ggtitle("Plot of Income by Sector") +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
})
output$esg_profitmargin <- renderPlot({
ggplot(income_statements, aes(x=`ESG Totalesg`, y=`Profit Margin`, color=Sector)) +
geom_point(shape = 16, size = 4, alpha = .4) +
labs(x="ESG Score")+
theme_minimal() +
ggtitle("Plot of Profit Margin by ESG Score") +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
})
industry_facet <- reactive({
ggplot(composite_total2) +
stat_density_2d(aes(x = composite_total2[,"Price_diff"], y = composite_total2[,"Price"],
fill = stat(nlevel)), geom = "polygon", n = 200, bins = 50,contour = TRUE) +
facet_wrap(Sector~.) + scale_fill_viridis_c(option = "A") +
labs(x="Price Difference", y="Price")
})
# 3D data output
output$threed_plot <- renderRglwidget({
plot_gg(industry_facet(), width = 5, height = 5, multicore = TRUE, scale = 250,
zoom = 0.7, theta = 10, phi = 30)
rglwidget()
})
# Histogram output var 1
output$distribution1 <- renderPlot({
hist(compositeAugust[,input$outcome], main="", xlab=input$outcome)
}, height=300, width=300)
# Histogram output var 2
output$distribution2 <- renderPlot({
hist(compositeAugust[,input$indepvar], main="", xlab=input$indepvar)
}, height=300, width=300)
}
shinyApp(ui = ui, server = server)
knitr::opts_chunk$set(echo = TRUE)
compositeAugust <- as.data.frame(read_csv("compositeAugust.csv"))
library(tidyverse)
library(readxl)
library(dplyr)
library(fs)
library(readr)
library(shiny)
library(shinyjs)
library(rgdal)
library(rayshader)
library(knitr)
library(magrittr)
library(pxR)
library(RColorBrewer)
library(rgeos)
library(magick)
library(rgl)
options(RGL_USE_NULL = TRUE)
#install.packages("devtools")
#devtools::install_github("tylermorganwall/rayshader")
library(tidyverse)
library(readxl)
library(dplyr)
library(fs)
library(readr)
library(shiny)
library(shinyjs)
library(rgdal)
library(rayshader)
library(knitr)
library(magrittr)
library(pxR)
library(RColorBrewer)
library(rgeos)
library(magick)
options(RGL_USE_NULL = TRUE)
library(rgl)
#install.packages("devtools")
#devtools::install_github("tylermorganwall/rayshader")
compositeAugust <- as.data.frame(read_csv("compositeAugust.csv"))
compositeAugust$Date <- NULL
composite_total2 <- as.data.frame(read_csv("composite_total2.csv"))
composite_total2 <- subset(composite_total2, Price_diff > -500 & Price_diff < 500 & Price < 1000)
income_statements <- as.data.frame(read_csv("income_statements.csv"))
ui <- fluidPage(
useShinyjs(),
titlePanel("Regression Model (Dataset: compositeAugust)"),
sidebarLayout(
sidebarPanel(
id="sidebar",
selectInput("outcome", label = h3("Outcome"),
choices = list("SMA20" = "SMA20",
"Price" = "Price",
"ATR" = "ATR",
"SMA20_diff" = "SMA20_diff",
"Price_diff" = "Price_diff",
"ATR_diff" = "ATR_diff"), selected = 1),
selectInput("indepvar", label = h3("Explanatory variable"),
choices = list("SMA20" = "SMA20",
"Price" = "Price",
"ATR" = "ATR",
"SMA20_diff" = "SMA20_diff",
"Price_diff" = "Price_diff",
"ATR_diff" = "ATR_diff"), selected = 1)
),
mainPanel(
tabsetPanel(type = "tabs",
tabPanel("Scatterplot", plotOutput("scatterplot")), # Plot
tabPanel("Distribution", # Plots of distributions
fluidRow(
column(6, plotOutput("distribution1")),
column(6, plotOutput("distribution2")))
), # Distributions
tabPanel("Industry Visualizations", plotOutput("facetedplot")), # Industry facet
tabPanel("Financial Visualizations",
br(),
br(),
plotOutput("income_financials"),
br(),
br(),
br(),
br(),
plotOutput("esg_profitmargin")), # Financial data plots
tabPanel("3D Heat Map", rglwidgetOutput("threed_plot",  width = 800, height = 600)),
tabPanel("Model Summary", verbatimTextOutput("summary")), # Regression output
tabPanel("Data", DT::dataTableOutput('tbl')), # Data as datatable
id = "tabset"
),
id = "main"
)
))
# SERVER
server <- function(input, output) {
observeEvent(input[["tabset"]], {
if(input[["tabset"]] == "Financial Visualizations" | input[["tabset"]] == "3D Heat Map"){
hideElement(selector = "#sidebar")
removeCssClass("main", "col-sm-8")
addCssClass("main", "col-sm-12")
}else{
showElement(selector = "#sidebar")
removeCssClass("main", "col-sm-12")
addCssClass("main", "col-sm-8")
}})
# Regression output
output$summary <- renderPrint({
fit <- lm(compositeAugust[,input$outcome] ~ compositeAugust[,input$indepvar])
names(fit$coefficients) <- c("Intercept", input$var2)
summary(fit)
})
# Data output
output$tbl = DT::renderDataTable({
DT::datatable(compositeAugust, options = list(lengthChange = FALSE))
})
# Scatterplot output
output$scatterplot <- renderPlot({
plot(compositeAugust[,input$indepvar], compositeAugust[,input$outcome], main="Scatterplot",
xlab=input$indepvar, ylab=input$outcome, pch=19)
abline(lm(compositeAugust[,input$outcome] ~ compositeAugust[,input$indepvar]), col="red")
lines(lowess(compositeAugust[,input$indepvar],compositeAugust[,input$outcome]), col="blue")
}, height=400)
# Industry visualization output
output$facetedplot <- renderPlot({
ggplot(composite_total2, aes(composite_total2[,input$indepvar], composite_total2[,input$outcome])) + geom_hex() + facet_wrap(~ Sector, ncol=4) + labs(y = input$outcome, x = input$indepvar)}, res = 96)
# Financial data output
output$income_financials <- renderPlot({
ggplot(income_statements, aes(x=Income, y=Sector)) +
geom_dotplot(binaxis='y', stackdir='center', stackratio=1.5, dotsize=.04) +
scale_x_continuous(breaks=seq(0,100000000000,10000000000)) +
labs(x="Income (USD)") +
theme_minimal() +
ggtitle("Plot of Income by Sector") +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
})
output$esg_profitmargin <- renderPlot({
ggplot(income_statements, aes(x=`ESG Totalesg`, y=`Profit Margin`, color=Sector)) +
geom_point(shape = 16, size = 4, alpha = .4) +
labs(x="ESG Score")+
theme_minimal() +
ggtitle("Plot of Profit Margin by ESG Score") +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
})
industry_facet <- reactive({
ggplot(composite_total2) +
stat_density_2d(aes(x = composite_total2[,"Price_diff"], y = composite_total2[,"Price"],
fill = stat(nlevel)), geom = "polygon", n = 200, bins = 50,contour = TRUE) +
facet_wrap(Sector~.) + scale_fill_viridis_c(option = "A") +
labs(x="Price Difference", y="Price")
})
# 3D data output
output$threed_plot <- renderRglwidget({
plot_gg(industry_facet(), width = 8, height = 8, multicore = TRUE, scale = 250,
zoom = 0.7, theta = 10, phi = 30)
rglwidget()
})
# Histogram output var 1
output$distribution1 <- renderPlot({
hist(compositeAugust[,input$outcome], main="", xlab=input$outcome)
}, height=300, width=300)
# Histogram output var 2
output$distribution2 <- renderPlot({
hist(compositeAugust[,input$indepvar], main="", xlab=input$indepvar)
}, height=300, width=300)
}
shinyApp(ui = ui, server = server)
compositeAugust <- as.data.frame(read_csv("compositeAugust.csv"))
compositeAugust$Date <- NULL
composite_total2 <- as.data.frame(read_csv("composite_total2.csv"))
composite_total2 <- subset(composite_total2, Price_diff > -500 & Price_diff < 500 & Price < 1000)
income_statements <- as.data.frame(read_csv("income_statements.csv"))
ui <- fluidPage(
useShinyjs(),
titlePanel("Regression Model (Dataset: compositeAugust)"),
sidebarLayout(
sidebarPanel(
id="sidebar",
selectInput("outcome", label = h3("Outcome"),
choices = list("SMA20" = "SMA20",
"Price" = "Price",
"ATR" = "ATR",
"SMA20_diff" = "SMA20_diff",
"Price_diff" = "Price_diff",
"ATR_diff" = "ATR_diff"), selected = 1),
selectInput("indepvar", label = h3("Explanatory variable"),
choices = list("SMA20" = "SMA20",
"Price" = "Price",
"ATR" = "ATR",
"SMA20_diff" = "SMA20_diff",
"Price_diff" = "Price_diff",
"ATR_diff" = "ATR_diff"), selected = 1)
),
mainPanel(
tabsetPanel(type = "tabs",
tabPanel("Scatterplot", plotOutput("scatterplot")), # Plot
tabPanel("Distribution", # Plots of distributions
fluidRow(
column(6, plotOutput("distribution1")),
column(6, plotOutput("distribution2")))
), # Distributions
tabPanel("Industry Visualizations", plotOutput("facetedplot")), # Industry facet
tabPanel("Financial Visualizations",
br(),
br(),
plotOutput("income_financials"),
br(),
br(),
br(),
br(),
plotOutput("esg_profitmargin")), # Financial data plots
tabPanel("3D Heat Map", rglwidgetOutput("threed_plot",  width = 800, height = 600)),
tabPanel("Model Summary", verbatimTextOutput("summary")), # Regression output
tabPanel("Data", DT::dataTableOutput('tbl')), # Data as datatable
id = "tabset"
),
id = "main"
)
))
# SERVER
server <- function(input, output) {
observeEvent(input[["tabset"]], {
if(input[["tabset"]] == "Financial Visualizations" | input[["tabset"]] == "3D Heat Map"){
hideElement(selector = "#sidebar")
removeCssClass("main", "col-sm-8")
addCssClass("main", "col-sm-12")
}else{
showElement(selector = "#sidebar")
removeCssClass("main", "col-sm-12")
addCssClass("main", "col-sm-8")
}})
# Regression output
output$summary <- renderPrint({
fit <- lm(compositeAugust[,input$outcome] ~ compositeAugust[,input$indepvar])
names(fit$coefficients) <- c("Intercept", input$var2)
summary(fit)
})
# Data output
output$tbl = DT::renderDataTable({
DT::datatable(compositeAugust, options = list(lengthChange = FALSE))
})
# Scatterplot output
output$scatterplot <- renderPlot({
plot(compositeAugust[,input$indepvar], compositeAugust[,input$outcome], main="Scatterplot",
xlab=input$indepvar, ylab=input$outcome, pch=19)
abline(lm(compositeAugust[,input$outcome] ~ compositeAugust[,input$indepvar]), col="red")
lines(lowess(compositeAugust[,input$indepvar],compositeAugust[,input$outcome]), col="blue")
}, height=400)
# Industry visualization output
output$facetedplot <- renderPlot({
ggplot(composite_total2, aes(composite_total2[,input$indepvar], composite_total2[,input$outcome])) + geom_hex() + facet_wrap(~ Sector, ncol=4) + labs(y = input$outcome, x = input$indepvar)}, res = 96)
# Financial data output
output$income_financials <- renderPlot({
ggplot(income_statements, aes(x=Income, y=Sector)) +
geom_dotplot(binaxis='y', stackdir='center', stackratio=1.5, dotsize=.04) +
scale_x_continuous(breaks=seq(0,100000000000,10000000000)) +
labs(x="Income (USD)") +
theme_minimal() +
ggtitle("Plot of Income by Sector") +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
})
output$esg_profitmargin <- renderPlot({
ggplot(income_statements, aes(x=`ESG Totalesg`, y=`Profit Margin`, color=Sector)) +
geom_point(shape = 16, size = 4, alpha = .4) +
labs(x="ESG Score")+
theme_minimal() +
ggtitle("Plot of Profit Margin by ESG Score") +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
})
industry_facet <- reactive({
ggplot(composite_total2) +
stat_density_2d(aes(x = composite_total2[,"Price_diff"], y = composite_total2[,"Price"],
fill = stat(nlevel)), geom = "polygon", n = 200, bins = 50,contour = TRUE) +
facet_wrap(Sector~.) + scale_fill_viridis_c(option = "A") +
labs(x="Price Difference", y="Price")
})
# 3D data output
output$threed_plot <- renderRglwidget({
plot_gg(industry_facet(), width = 8, height = 8, multicore = TRUE, scale = 250,
zoom = 0.7, theta = 10, phi = 30)
rglwidget()
})
# Histogram output var 1
output$distribution1 <- renderPlot({
hist(compositeAugust[,input$outcome], main="", xlab=input$outcome)
}, height=300, width=300)
# Histogram output var 2
output$distribution2 <- renderPlot({
hist(compositeAugust[,input$indepvar], main="", xlab=input$indepvar)
}, height=300, width=300)
}
shinyApp(ui = ui, server = server)
compositeAugust <- as.data.frame(read_csv("compositeAugust.csv"))
compositeAugust$Date <- NULL
composite_total2 <- as.data.frame(read_csv("composite_total2.csv"))
composite_total2 <- subset(composite_total2, Price_diff > -500 & Price_diff < 500 & Price < 1000)
income_statements <- as.data.frame(read_csv("income_statements.csv"))
ui <- fluidPage(
useShinyjs(),
titlePanel("Regression Model (Dataset: compositeAugust)"),
sidebarLayout(
sidebarPanel(
id="sidebar",
selectInput("outcome", label = h3("Outcome"),
choices = list("SMA20" = "SMA20",
"Price" = "Price",
"ATR" = "ATR",
"SMA20_diff" = "SMA20_diff",
"Price_diff" = "Price_diff",
"ATR_diff" = "ATR_diff"), selected = 1),
selectInput("indepvar", label = h3("Explanatory variable"),
choices = list("SMA20" = "SMA20",
"Price" = "Price",
"ATR" = "ATR",
"SMA20_diff" = "SMA20_diff",
"Price_diff" = "Price_diff",
"ATR_diff" = "ATR_diff"), selected = 1)
),
mainPanel(
tabsetPanel(type = "tabs",
tabPanel("Scatterplot", plotOutput("scatterplot")), # Plot
tabPanel("Distribution", # Plots of distributions
fluidRow(
column(6, plotOutput("distribution1")),
column(6, plotOutput("distribution2")))
), # Distributions
tabPanel("Industry Visualizations", plotOutput("facetedplot")), # Industry facet
tabPanel("Financial Visualizations",
br(),
br(),
plotOutput("income_financials"),
br(),
br(),
br(),
br(),
plotOutput("esg_profitmargin")), # Financial data plots
tabPanel("3D Heat Map", rglwidgetOutput("threed_plot",  width = 800, height = 600)),
tabPanel("Model Summary", verbatimTextOutput("summary")), # Regression output
tabPanel("Data", DT::dataTableOutput('tbl')), # Data as datatable
id = "tabset"
),
id = "main"
)
))
# SERVER
server <- function(input, output) {
observeEvent(input[["tabset"]], {
if(input[["tabset"]] == "Financial Visualizations" | input[["tabset"]] == "3D Heat Map"){
hideElement(selector = "#sidebar")
removeCssClass("main", "col-sm-8")
addCssClass("main", "col-sm-12")
}else{
showElement(selector = "#sidebar")
removeCssClass("main", "col-sm-12")
addCssClass("main", "col-sm-8")
}})
# Regression output
output$summary <- renderPrint({
fit <- lm(compositeAugust[,input$outcome] ~ compositeAugust[,input$indepvar])
names(fit$coefficients) <- c("Intercept", input$var2)
summary(fit)
})
# Data output
output$tbl = DT::renderDataTable({
DT::datatable(compositeAugust, options = list(lengthChange = FALSE))
})
# Scatterplot output
output$scatterplot <- renderPlot({
plot(compositeAugust[,input$indepvar], compositeAugust[,input$outcome], main="Scatterplot",
xlab=input$indepvar, ylab=input$outcome, pch=19)
abline(lm(compositeAugust[,input$outcome] ~ compositeAugust[,input$indepvar]), col="red")
lines(lowess(compositeAugust[,input$indepvar],compositeAugust[,input$outcome]), col="blue")
}, height=400)
# Industry visualization output
output$facetedplot <- renderPlot({
ggplot(composite_total2, aes(composite_total2[,input$indepvar], composite_total2[,input$outcome])) + geom_hex() + facet_wrap(~ Sector, ncol=4) + labs(y = input$outcome, x = input$indepvar)}, res = 96)
# Financial data output
output$income_financials <- renderPlot({
ggplot(income_statements, aes(x=Income, y=Sector)) +
geom_dotplot(binaxis='y', stackdir='center', stackratio=1.5, dotsize=.04) +
scale_x_continuous(breaks=seq(0,100000000000,10000000000)) +
labs(x="Income (USD)") +
theme_minimal() +
ggtitle("Plot of Income by Sector") +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
})
output$esg_profitmargin <- renderPlot({
ggplot(income_statements, aes(x=`ESG Totalesg`, y=`Profit Margin`, color=Sector)) +
geom_point(shape = 16, size = 4, alpha = .4) +
labs(x="ESG Score")+
theme_minimal() +
ggtitle("Plot of Profit Margin by ESG Score") +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
})
industry_facet <- reactive({
ggplot(composite_total2) +
stat_density_2d(aes(x = composite_total2[,"Price_diff"], y = composite_total2[,"Price"],
fill = stat(nlevel)), geom = "polygon", n = 200, bins = 50,contour = TRUE) +
facet_wrap(Sector~.) + scale_fill_viridis_c(option = "A") +
labs(x="Price Difference", y="Price")
})
# 3D data output
output$threed_plot <- renderRglwidget({
plot_gg(industry_facet(), width = 7, height = 7, multicore = TRUE, scale = 250,
zoom = 0.7, theta = 10, phi = 30)
rglwidget()
})
# Histogram output var 1
output$distribution1 <- renderPlot({
hist(compositeAugust[,input$outcome], main="", xlab=input$outcome)
}, height=300, width=300)
# Histogram output var 2
output$distribution2 <- renderPlot({
hist(compositeAugust[,input$indepvar], main="", xlab=input$indepvar)
}, height=300, width=300)
}
shinyApp(ui = ui, server = server)
